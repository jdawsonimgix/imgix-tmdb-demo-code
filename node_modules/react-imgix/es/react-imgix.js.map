{"version":3,"sources":["../src/react-imgix.jsx"],"names":["PropTypes","React","Component","config","PACKAGE_VERSION","constructUrl","compactParamKeys","extractClientAndPathComponents","extractQueryParams","ShouldComponentUpdateHOC","mergeComponentPropsHOF","processPropsHOF","NODE_ENV","process","env","buildKey","idx","defaultImgixParams","auto","defaultAttributeMap","src","srcSet","sizes","noop","COMMON_PROP_TYPES","className","string","onMounted","func","htmlAttributes","object","SHARED_IMGIX_AND_SOURCE_PROP_TYPES","disableQualityByDPR","bool","disableSrcSet","disableLibraryParam","imgixParams","width","number","height","isRequired","srcSetOptions","shape","widths","arrayOf","widthTolerance","minWidth","maxWidth","devicePixelRatios","aspectRatioIsValid","aspectRatio","test","setParentRef","parentRef","el","current","buildSrcSet","rawSrc","params","options","client","pathComponents","compactedParams","join","buildSrc","inputSrc","fixedSize","srcOptions","ixlib","w","h","q","urlParams","finalWidth","finalHeight","disableVariableQuality","ar","showARWarning","warnings","invalidARFormat","console","warn","props","ReactImgix","imgRef","type","sizesAttribute","_inPicture","attributeConfig","childProps","undefined","ref","displayName","PictureImpl","pictureRef","children","_children","Children","map","child","cloneElement","key","imgIdx","findIndex","c","ReactImgixWrapped","fallbackImage","length","push","splice","any","SourceImpl","sourceRef","Picture","Source","__ReactImgixImpl","__SourceImpl","__PictureImpl"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport \"./array-findindex\";\nimport { config } from \"./common\";\nimport { PACKAGE_VERSION } from \"./constants\";\nimport constructUrl, {\n  compactParamKeys,\n  extractClientAndPathComponents\n} from \"./constructUrl\";\nimport extractQueryParams from \"./extractQueryParams\";\nimport { ShouldComponentUpdateHOC } from \"./HOCs\";\nimport { mergeComponentPropsHOF, processPropsHOF } from \"./HOFs\";\n\nconst NODE_ENV = process.env.NODE_ENV;\n\nconst buildKey = (idx) => `react-imgix-${idx}`;\n\nconst defaultImgixParams = {\n  auto: [\"format\"],\n};\n\nconst defaultAttributeMap = {\n  src: \"src\",\n  srcSet: \"srcSet\",\n  sizes: \"sizes\",\n};\n\nconst noop = () => {};\n\nconst COMMON_PROP_TYPES = {\n  className: PropTypes.string,\n  onMounted: PropTypes.func,\n  htmlAttributes: PropTypes.object,\n};\n\nconst SHARED_IMGIX_AND_SOURCE_PROP_TYPES = Object.assign(\n  {},\n  COMMON_PROP_TYPES,\n  {\n    disableQualityByDPR: PropTypes.bool,\n    disableSrcSet: PropTypes.bool,\n    disableLibraryParam: PropTypes.bool,\n    imgixParams: PropTypes.object,\n    sizes: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    src: PropTypes.string.isRequired,\n    srcSetOptions: PropTypes.shape({\n      widths: PropTypes.arrayOf(PropTypes.number),\n      widthTolerance: PropTypes.number,\n      minWidth: PropTypes.number,\n      maxWidth: PropTypes.number,\n      devicePixelRatios: PropTypes.arrayOf(PropTypes.number),\n    }),\n  }\n);\n\n/**\n * Validates that an aspect ratio is in the format w:h. If false is returned, the aspect ratio is in the wrong format.\n */\nfunction aspectRatioIsValid(aspectRatio) {\n  if (typeof aspectRatio !== \"string\") {\n    return false;\n  }\n\n  return /^\\d+(\\.\\d+)?:\\d+(\\.\\d+)?$/.test(aspectRatio);\n}\n\nconst setParentRef = (parentRef, el) => {\n  if (!parentRef) {\n    return;\n  }\n\n  // assign ref based on if it's a callback vs object\n  if (typeof parentRef === \"function\") {\n    parentRef(el);\n  } else {\n    parentRef.current = el;\n  }\n};\n\nfunction buildSrcSet(rawSrc, params = {}, options = {}) {\n  const { client, pathComponents } = extractClientAndPathComponents(rawSrc);\n  const compactedParams = compactParamKeys(params);\n  return client.buildSrcSet(pathComponents.join(\"/\"), compactedParams, options);\n}\n\n/**\n * Build a imgix source url with parameters from a raw url\n */\nfunction buildSrc({\n  src: inputSrc,\n  width,\n  height,\n  disableLibraryParam,\n  disableSrcSet,\n  imgixParams,\n  disableQualityByDPR,\n  srcSetOptions,\n}) {\n  const fixedSize = width != null || height != null;\n\n  const [rawSrc, params] = extractQueryParams(inputSrc);\n\n  const srcOptions = Object.assign(\n    {},\n    params,\n    imgixParams,\n    disableLibraryParam ? {} : { ixlib: `react-${PACKAGE_VERSION}` },\n    fixedSize && height ? { height } : {},\n    fixedSize && width ? { width } : {}\n  );\n\n  const src = constructUrl(rawSrc, srcOptions);\n\n  let srcSet;\n\n  if (disableSrcSet) {\n    srcSet = src;\n  } else {\n    if (fixedSize) {\n      const { width, w, height, h, q, ...urlParams } = srcOptions;\n      if (q) {\n        urlParams[\"q\"] = q;\n      }\n\n      const finalWidth = width || w;\n      const finalHeight = height || h;\n\n      if (finalWidth) {\n        urlParams[\"w\"] = finalWidth;\n      }\n\n      if (finalHeight) {\n        urlParams[\"h\"] = finalHeight;\n      }\n\n      srcSet = buildSrcSet(rawSrc, urlParams, {\n        disableVariableQuality: disableQualityByDPR,\n        ...srcSetOptions,\n      });\n    } else {\n      const { width, w, height, h, ...urlParams } = srcOptions;\n\n      const aspectRatio = imgixParams.ar;\n      let showARWarning =\n        aspectRatio != null && aspectRatioIsValid(aspectRatio) === false;\n\n      srcSet = buildSrcSet(rawSrc, urlParams, srcSetOptions);\n\n      if (\n        NODE_ENV !== \"production\" &&\n        showARWarning &&\n        config.warnings.invalidARFormat\n      ) {\n        console.warn(\n          `[Imgix] The aspect ratio passed (\"${aspectRatio}\") is not in the correct format. The correct format is \"W:H\".`\n        );\n      }\n    }\n  }\n\n  return {\n    src,\n    srcSet,\n  };\n}\n\n/**\n * Combines default imgix params with custom imgix params to make a imgix params config object\n */\nfunction imgixParams(props) {\n  const params = Object.assign({}, defaultImgixParams, props.imgixParams);\n  return Object.assign({}, params);\n}\n\n/**\n * React component used to render <img> elements with Imgix\n */\nclass ReactImgix extends Component {\n  static propTypes = Object.assign({}, SHARED_IMGIX_AND_SOURCE_PROP_TYPES);\n  static defaultProps = {\n    disableSrcSet: false,\n    onMounted: noop,\n  };\n\n  constructor(props) {\n    super(props);\n    this.imgRef = null;\n  }\n\n  componentDidMount() {\n    this.props.onMounted(this.imgRef);\n  }\n\n  render() {\n    const { disableSrcSet, type, width, height } = this.props;\n\n    // Pre-render checks\n    if (NODE_ENV !== \"production\" && config.warnings.sizesAttribute) {\n      if (\n        this.props.width == null &&\n        this.props.height == null &&\n        this.props.sizes == null &&\n        !this.props._inPicture\n      ) {\n        console.warn(\n          \"If width and height are not set, a sizes attribute should be passed.\"\n        );\n      }\n    }\n\n    const { src, srcSet } = buildSrc(\n      Object.assign({}, this.props, {\n        type: \"img\",\n        imgixParams: imgixParams(this.props),\n      })\n    );\n\n    const attributeConfig = Object.assign(\n      {},\n      defaultAttributeMap,\n      this.props.attributeConfig\n    );\n    const childProps = Object.assign({}, this.props.htmlAttributes, {\n      [attributeConfig.sizes]: this.props.sizes,\n      className: this.props.className,\n      width: width <= 1 ? null : width,\n      height: height <= 1 ? null : height,\n      [attributeConfig.src]: src,\n      ref: (el) => {\n        this.imgRef = el;\n        if (\n          this.props.htmlAttributes !== undefined &&\n          \"ref\" in this.props.htmlAttributes\n        ) {\n          setParentRef(this.props.htmlAttributes.ref, this.imgRef);\n        }\n      },\n    });\n    if (!disableSrcSet) {\n      childProps[attributeConfig.srcSet] = srcSet;\n    }\n\n    return <img {...childProps} />;\n  }\n}\nReactImgix.displayName = \"ReactImgix\";\n\n/**\n * React component used to render <picture> elements with Imgix\n */\nclass PictureImpl extends Component {\n  static propTypes = Object.assign({}, COMMON_PROP_TYPES, {\n    children: PropTypes.any,\n  });\n  static defaultProps = {\n    onMounted: noop,\n  };\n\n  constructor(props) {\n    super(props);\n    this.pictureRef = null;\n  }\n\n  componentDidMount() {\n    this.props.onMounted(this.pictureRef);\n  }\n\n  render() {\n    const { children } = this.props;\n\n    // make sure all of our children have key set, otherwise we get react warnings\n    let _children =\n      React.Children.map(children, (child, idx) =>\n        React.cloneElement(child, {\n          key: buildKey(idx),\n          _inPicture: true,\n        })\n      ) || [];\n\n    /*\n    We need to make sure an <img /> or <Imgix /> is the last child so we look for one in children\n      a. if we find one, move it to the last entry if it's not already there\n      b. if we don't find one, warn the user as they probably want to pass one.\n    */\n\n    // look for an <img> or <ReactImgix type='img'> - at the bare minimum we have to have a single <img> element or else it will not work.\n    let imgIdx = _children.findIndex(\n      (c) =>\n        c.type === \"img\" ||\n        c.type === ReactImgix ||\n        c.type === ReactImgixWrapped\n    );\n\n    if (imgIdx === -1 && config.warnings.fallbackImage) {\n      console.warn(\n        \"No fallback <img /> or <Imgix /> found in the children of a <picture> component. A fallback image should be passed to ensure the image renders correctly at all dimensions.\"\n      );\n    } else if (imgIdx !== _children.length - 1) {\n      // found one, need to move it to the end\n      _children.push(_children.splice(imgIdx, 1)[0]);\n    }\n\n    return (\n      <picture ref={(el) => (this.pictureRef = el)} children={_children} />\n    );\n  }\n}\nPictureImpl.displayName = \"ReactImgixPicture\";\n\n/**\n * React component used to render <source> elements with Imgix\n */\nclass SourceImpl extends Component {\n  static propTypes = Object.assign({}, SHARED_IMGIX_AND_SOURCE_PROP_TYPES);\n  static defaultProps = {\n    disableSrcSet: false,\n    onMounted: noop,\n  };\n\n  constructor(props) {\n    super(props);\n    this.sourceRef = null;\n  }\n\n  componentDidMount() {\n    this.props.onMounted(this.sourceRef);\n  }\n\n  render() {\n    const { disableSrcSet, width, height } = this.props;\n\n    const { src, srcSet } = buildSrc(\n      Object.assign({}, this.props, {\n        type: \"source\",\n        imgixParams: imgixParams(this.props),\n      })\n    );\n\n    const attributeConfig = Object.assign(\n      {},\n      defaultAttributeMap,\n      this.props.attributeConfig\n    );\n    const childProps = Object.assign({}, this.props.htmlAttributes, {\n      [attributeConfig.sizes]: this.props.sizes,\n      className: this.props.className,\n      width: width <= 1 ? null : width,\n      height: height <= 1 ? null : height,\n      ref: (el) => {\n        this.sourceRef = el;\n        if (\n          this.props.htmlAttributes !== undefined &&\n          \"ref\" in this.props.htmlAttributes\n        ) {\n          setParentRef(this.props.htmlAttributes.ref, this.sourceRef);\n        }\n      },\n    });\n\n    // inside of a <picture> element a <source> element ignores its src\n    // attribute in favor of srcSet so we set that with either an actual\n    // srcSet or a single src\n    if (disableSrcSet) {\n      childProps[attributeConfig.srcSet] = src;\n    } else {\n      childProps[attributeConfig.srcSet] = `${srcSet}`;\n    }\n    // for now we'll take media from htmlAttributes which isn't ideal because\n    //   a) this isn't an <img>\n    //   b) passing objects as props means that react will always rerender\n    //      since objects dont respond correctly to ===\n\n    return <source {...childProps} />;\n  }\n}\nSourceImpl.displayName = \"ReactImgixSource\";\n\nconst ReactImgixWrapped = mergeComponentPropsHOF(\n  processPropsHOF(ShouldComponentUpdateHOC(ReactImgix))\n);\nconst Picture = mergeComponentPropsHOF(\n  processPropsHOF(ShouldComponentUpdateHOC(PictureImpl))\n);\nconst Source = mergeComponentPropsHOF(\n  processPropsHOF(ShouldComponentUpdateHOC(SourceImpl))\n);\n\nexport default ReactImgixWrapped;\nexport {\n  ReactImgix as __ReactImgixImpl,\n  Picture,\n  Source,\n  SourceImpl as __SourceImpl,\n  PictureImpl as __PictureImpl, // for testing\n};\n\n"],"file":"react-imgix.js"}