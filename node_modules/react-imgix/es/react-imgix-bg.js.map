{"version":3,"sources":["../src/react-imgix-bg.jsx"],"names":["React","withContentRect","PACKAGE_VERSION","constructUrl","extractQueryParams","findClosest","targetWidths","shallowEqual","findNearestWidth","actualWidth","toFixed","dp","value","__shouldComponentUpdate","props","nextProps","contentRect","bounds","prevWidth","width","prevHeight","height","nextContentRect","nextBounds","nextWidth","nextHeight","customizer","oldProp","newProp","key","a","b","Array","isArray","undefined","propsEqual","BackgroundImpl","measureRef","imgixParams","onLoad","disableLibraryParam","src","children","className","forcedWidth","w","forcedHeight","h","hasDOMDimensions","htmlAttributes","dpr","global","devicePixelRatio","ref","onRef","el","bothWidthAndHeightPassed","ar","neitherWidthNorHeightPassed","Math","ceil","isReady","commonProps","renderedSrc","rawSrc","params","srcOptions","fit","ixlib","style","backgroundImage","backgroundSize","Component","Background","__BackgroundImpl"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withContentRect } from \"react-measure\";\nimport { PACKAGE_VERSION } from \"./constants\";\nimport constructUrl from \"./constructUrl\";\nimport extractQueryParams from \"./extractQueryParams\";\nimport findClosest from \"./findClosest\";\nimport targetWidths from \"./targetWidths\";\nimport { shallowEqual } from \"./common\";\n\nconst findNearestWidth = (actualWidth) =>\n  findClosest(actualWidth, targetWidths);\n\nconst toFixed = (dp, value) => +value.toFixed(dp);\n\nexport const __shouldComponentUpdate = (props, nextProps) => {\n  const contentRect = props.contentRect;\n  const bounds = contentRect.bounds;\n  const { width: prevWidth, height: prevHeight } = bounds;\n\n  const nextContentRect = nextProps.contentRect;\n  const nextBounds = nextContentRect.bounds;\n  const { width: nextWidth, height: nextHeight } = nextBounds;\n\n  // If neither of the previous nor next dimensions are present,\n  // re-render.\n  if (!nextWidth || !nextHeight || !prevWidth || !prevHeight) {\n    return true;\n  }\n\n  // The component has been rendered at least twice by this point\n  // and both the previous and next dimensions should be defined.\n  // Only update if the nextWidth is greater than the prevWidth.\n  if (prevWidth && nextWidth && nextWidth > prevWidth) {\n    return true;\n  }\n\n  // Similarly, only update if the next height is greater than\n  // the previous height.\n  if (prevHeight && nextHeight && nextHeight > prevHeight) {\n    return true;\n  }\n\n  const customizer = (oldProp, newProp, key) => {\n    // these keys are ignored from prop checking process\n    if (key === \"contextRect\" || key === \"measure\" || key === \"measureRef\") {\n      return true;\n    }\n\n    if (key === \"children\") {\n      return oldProp == newProp;\n    }\n\n    if (key === \"imgixParams\") {\n      return shallowEqual(oldProp, newProp, (a, b) => {\n        if (Array.isArray(a)) {\n          return shallowEqual(a, b);\n        }\n        return undefined;\n      });\n    }\n\n    if (key === \"htmlAttributes\") {\n      return shallowEqual(oldProp, newProp);\n    }\n\n    return undefined; // handled by shallowEqual\n  };\n\n  // If we made it here, we need to check if the \"top-level\"\n  // props have changed (e.g. disableLibraryParam).\n  const propsEqual = shallowEqual(props, nextProps, customizer);\n\n  return !(propsEqual);\n}\n\nclass BackgroundImpl extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return __shouldComponentUpdate(this.props, nextProps);\n  }\n\n  render() {\n    const {\n      measureRef,\n      contentRect,\n      imgixParams = {},\n      onLoad,\n      disableLibraryParam,\n      src,\n      children,\n      className = \"\",\n    } = this.props;\n    const { w: forcedWidth, h: forcedHeight } = imgixParams;\n    const hasDOMDimensions =\n      contentRect.bounds.width != null && contentRect.bounds.height != null;\n    const htmlAttributes = this.props.htmlAttributes || {};\n    const dpr = toFixed(2, imgixParams.dpr || global.devicePixelRatio || 1);\n    const ref = htmlAttributes.ref;\n    const onRef = (el) => {\n      measureRef(el);\n      if (typeof ref === \"function\") {\n        ref(el);\n      }\n    };\n\n    const { width, height } = (() => {\n      const bothWidthAndHeightPassed =\n        forcedWidth != null && forcedHeight != null;\n\n      if (bothWidthAndHeightPassed) {\n        return { width: forcedWidth, height: forcedHeight };\n      }\n\n      if (!hasDOMDimensions) {\n        return { width: undefined, height: undefined };\n      }\n      const ar = contentRect.bounds.width / contentRect.bounds.height;\n\n      const neitherWidthNorHeightPassed =\n        forcedWidth == null && forcedHeight == null;\n      if (neitherWidthNorHeightPassed) {\n        const width = findNearestWidth(contentRect.bounds.width);\n        const height = Math.ceil(width / ar);\n        return { width, height };\n      }\n      if (forcedWidth != null) {\n        const height = Math.ceil(forcedWidth / ar);\n        return { width: forcedWidth, height };\n      } else if (forcedHeight != null) {\n        const width = Math.ceil(forcedHeight * ar);\n        return { width, height: forcedHeight };\n      }\n    })();\n    const isReady = width != null && height != null;\n\n    const commonProps = {\n      ...htmlAttributes,\n    };\n\n    if (!isReady) {\n      return (\n        <div\n          {...commonProps}\n          className={`react-imgix-bg-loading ${className}`}\n          ref={onRef}\n        >\n          {children}\n        </div>\n      );\n    }\n\n    const renderedSrc = (() => {\n      const [rawSrc, params] = extractQueryParams(src);\n      const srcOptions = {\n        ...params,\n        fit: \"crop\",\n        ...imgixParams,\n        ...(disableLibraryParam ? {} : { ixlib: `react-${PACKAGE_VERSION}` }),\n        width,\n        height,\n        dpr,\n      };\n\n      return constructUrl(rawSrc, srcOptions);\n    })();\n\n    const style = {\n      ...htmlAttributes.style,\n      backgroundImage: `url(${renderedSrc})`,\n      backgroundSize:\n        (htmlAttributes.style || {}).backgroundSize !== undefined\n          ? htmlAttributes.style.backgroundSize\n          : \"cover\",\n    };\n\n    return (\n      <div {...commonProps} className={className} ref={onRef} style={style}>\n        {children}\n      </div>\n    );\n  }\n}\nconst Background = withContentRect(\"bounds\")(BackgroundImpl);\n\nexport { Background, BackgroundImpl as __BackgroundImpl };\n"],"file":"react-imgix-bg.js"}