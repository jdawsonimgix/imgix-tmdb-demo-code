{"version":3,"sources":["../../src/HOCs/imgixProvider.jsx"],"names":["React","useContext","createContext","ImgixContext","useImgixContext","ImgixProvider","children","reactImgixProps","value","length","console","error"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AAEA,IAAMC,YAAY,gBAAGD,aAAa,EAAlC;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASE,eAAT,GAA2B;AACzB,SAAOH,UAAU,CAACE,YAAD,CAAjB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,aAAT,OAAuD;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAAlBC,eAAkB;;AACrD,MAAMC,KAAK,GAAGD,eAAd;;AAEA,MAAKD,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,CAACG,MAAT,GAAkB,CAA3C,EAA8C;AAC5CC,IAAAA,OAAO,CAACC,KAAR,CAAc,4DAAd;AACD;;AACD,sBAAO,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEH;AAA9B,KAAsCF,QAAtC,CAAP;AACD;;AAED,SAAQD,aAAR,EAAuBD,eAAvB","sourcesContent":["import React, { useContext, createContext } from 'react'\n\nconst ImgixContext = createContext()\n\n/**\n * `useImgixContext()` tries to invoke `React.useContext()`. If no context\n * is available, this function returns `undefined`. \n * @returns The context defined by the closest parent `ImgixProvider`.\n */\nfunction useImgixContext() {\n  return useContext(ImgixContext)\n}\n\n/**\n * Creates a Provider component that passes `reactImgixProps` as the Context \n * for child components who use the `useImgixContext()` custom hook or \n * `React.useContext()` API.\n * @param {React.Element <typeof Component>} children \n * @param {Object} reactImgixProps \n * @returns React.Element\n */\nfunction ImgixProvider({children, ...reactImgixProps}) {\n  const value = reactImgixProps\n\n  if ( children == null || children.length < 1) {\n    console.error(\"ImgixProvider must have at least one Imgix child component\")\n  }\n  return <ImgixContext.Provider value={value}>{children}</ImgixContext.Provider>\n}\n\nexport {ImgixProvider, useImgixContext}\n"],"file":"imgixProvider.js"}