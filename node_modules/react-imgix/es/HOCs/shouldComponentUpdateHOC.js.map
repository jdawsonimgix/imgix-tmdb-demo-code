{"version":3,"sources":["../../src/HOCs/shouldComponentUpdateHOC.jsx"],"names":["React","Component","warning","shallowEqual","ShouldComponentUpdateHOC","WrappedComponent","nextProps","props","onMounted","customizer","oldProp","newProp","key","a","b","Array","isArray","undefined","propsAreEqual","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,WAAtC;;AAEA,IAAMC,wBAAwB,GAAG,kCAACC,gBAAD,EAAsB;AAAA,MAC/CD,wBAD+C;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,8EAE3B,UAACE,SAAD,EAAe;AACrC,YAAMC,KAAK,GAAG,MAAKA,KAAnB;AACAL,QAAAA,OAAO,CACLI,SAAS,CAACE,SAAV,IAAuB,MAAKD,KAAL,CAAWC,SAD7B,EAEL,kOAFK,CAAP;;AAKA,YAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAUC,OAAV,EAAmBC,GAAnB,EAA2B;AAC5C,cAAIA,GAAG,KAAK,UAAZ,EAAwB;AACtB,mBAAOT,YAAY,CAACO,OAAD,EAAUC,OAAV,CAAnB;AACD;;AACD,cAAIC,GAAG,KAAK,aAAZ,EAA2B;AACzB,mBAAOT,YAAY,CAACO,OAAD,EAAUC,OAAV,EAAmB,UAACE,CAAD,EAAIC,CAAJ,EAAU;AAC9C,kBAAIC,KAAK,CAACC,OAAN,CAAcH,CAAd,CAAJ,EAAsB;AACpB,uBAAOV,YAAY,CAACU,CAAD,EAAIC,CAAJ,CAAnB;AACD;;AACD,qBAAOG,SAAP;AACD,aALkB,CAAnB;AAMD;;AACD,cAAIL,GAAG,KAAK,gBAAZ,EAA8B;AAC5B,mBAAOT,YAAY,CAACO,OAAD,EAAUC,OAAV,CAAnB;AACD;;AACD,cAAIC,GAAG,KAAK,iBAAZ,EAA+B;AAC7B,mBAAOT,YAAY,CAACO,OAAD,EAAUC,OAAV,CAAnB;AACD;;AACD,iBAAOM,SAAP,CAlB4C,CAkB1B;AACnB,SAnBD;;AAoBA,YAAMC,aAAa,GAAGf,YAAY,CAACI,KAAD,EAAQD,SAAR,EAAmBG,UAAnB,CAAlC;AACA,eAAO,CAACS,aAAR;AACD,OA/BkD;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAgC1C;AACP,4BAAO,oBAAC,gBAAD,EAAsB,KAAKX,KAA3B,CAAP;AACD;AAlCkD;;AAAA;AAAA,IACdN,SADc;;AAoCrDG,EAAAA,wBAAwB,CAACe,WAAzB,sCAAmEd,gBAAgB,CAACc,WAApF;AACA,SAAOf,wBAAP;AACD,CAtCD;;AAwCA,SAASA,wBAAT","sourcesContent":["import React, { Component } from \"react\";\n\nimport { warning, shallowEqual } from \"../common\";\n\nconst ShouldComponentUpdateHOC = (WrappedComponent) => {\n  class ShouldComponentUpdateHOC extends Component {\n    shouldComponentUpdate = (nextProps) => {\n      const props = this.props;\n      warning(\n        nextProps.onMounted == this.props.onMounted,\n        \"props.onMounted() is changing between renders. This is probably not intended. Ensure that a class method is being passed to Imgix rather than a function that is created every render. If this is intended, ignore this warning.\"\n      );\n\n      const customizer = (oldProp, newProp, key) => {\n        if (key === \"children\") {\n          return shallowEqual(oldProp, newProp);\n        }\n        if (key === \"imgixParams\") {\n          return shallowEqual(oldProp, newProp, (a, b) => {\n            if (Array.isArray(a)) {\n              return shallowEqual(a, b);\n            }\n            return undefined;\n          });\n        }\n        if (key === \"htmlAttributes\") {\n          return shallowEqual(oldProp, newProp);\n        }\n        if (key === \"attributeConfig\") {\n          return shallowEqual(oldProp, newProp);\n        }\n        return undefined; // handled by shallowEqual\n      };\n      const propsAreEqual = shallowEqual(props, nextProps, customizer);\n      return !propsAreEqual;\n    };\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n  ShouldComponentUpdateHOC.displayName = `ShouldComponentUpdateHOC(${WrappedComponent.displayName})`;\n  return ShouldComponentUpdateHOC;\n};\n\nexport { ShouldComponentUpdateHOC };\n"],"file":"shouldComponentUpdateHOC.js"}